@model HammerSpace.Models.GamesModels.GameCreate

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>VideoGameCreate</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.LocalCoop, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.LocalCoop)
                @Html.ValidationMessageFor(model => model.LocalCoop, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @*Video Game Genre Enum drop down list now available*@
    <div class="form-group">
        @Html.LabelFor(model => model.VideoGameGenre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.VideoGameGenre, "Select a Game Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VideoGameGenre, "", new { @class = "text-danger" })
        </div>
    </div>

    @*Video Game ESRBRating Enum drop down list now available*@
    <div class="form-group">
        @Html.LabelFor(model => model.ESRBRating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.ESRBRating, "Select a Game Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ESRBRating, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Console, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Console, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Console, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
